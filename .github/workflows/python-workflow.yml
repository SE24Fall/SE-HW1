# # This is a basic workflow to help you get started with Actions

name: python-workflow

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the "main" branch
#   pull_request:
#     branches: [ "main" ]
#   push:
#     branches: ["develop"]

#   # Allows you to run this workflow manually from the Actions tab
#   # workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "test"
#   test:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v4
#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.x'
#       - name: Test with pytest
#         run: |
#           pip install pytest pytest-cov
#           pytest test_cases.py --cov --cov-report=html
          
#       - name: Upload coverage report
#         uses: actions/upload-artifact@v3
#         with:
#           name: coverage-report
#           path: htmlcov


  #####################################################################################################

#name: pytest-coverage-comment
on:
  pull_request:
    branches:
      - '*'

# https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
# `contents` is for permission to the contents of the repository.
# `pull-requests` is for permission to pull request
permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov                
        # flake8
  #        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          pytest test_cases.py --cov --cov-report=html
      
      - name: Build coverage file
        run: |
          pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=app tests/ | tee pytest-coverage.txt

      - name: Pytest coverage comment
        uses: SE24Fall/SE-HW1@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
      #    junitxml-path: ./pytest.xml
