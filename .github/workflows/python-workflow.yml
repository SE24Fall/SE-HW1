# This is a basic workflow to help you get started with Actions

name: python-workflow
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    branches: [ "main" ]
  push:
    branches: ["develop"]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on

    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install pytest coverage pyflakes pylint autopep8
      - name: Test using pytest
        run: |
          pytest test_cases.py hw2/test_cases_hw2.py
      - name: Static analysis using pyflakes, pylint and autopep8
        if: success() || failure()
        run: |
          pyflakes hw2/hw2_debugging.py
          pylint hw2/hw2_debugging.py
          autopep8 hw2/hw2_debugging.py --aggressive --diff
      - name: Code coverage using coverage.py
        if: success() || failure()
        run: |
          coverage run sample.py
          coverage lcov
      - name: Upload to coveralls
        if: success() || failure()
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: coverage.lcov
